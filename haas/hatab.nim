import hatype

import ag/tab3
import ag/locii
import ag/basis

# 2017/12/20
# William Whitacre
# Radix 7 Referenfce Implementation Driver Tables

const pow7_table* = [
  1.haas_ditype,
  7,
  49,
  343,
  2401,
  16807,
  117649,
  823543,
  5764801,
  40353607,
  282475249,
  1977326743,
  13841287201
]

proc haas_pow7*[I: Ordinal](i: I): auto = pow7_table[i]

# If this has not yet been filled, we need at least the seed
# tables. This is handled below by looking to see if including
# tab3 from the autogenerated section resulted in the add3 and
# carry3 tables are defined.
export tab3

#                          0  1  2  3  4  5  6
const haas_inv_table* = [0, 1, 6, 5, 4, 3, 2]

const haas_add_table* =
  when declared(haas_add3_table):
    haas_add3_table[0]
  else:
    [
      [0, 1, 2, 3, 4, 5, 6],
      [1, 3, 5, 2, 0, 6, 4],
      [2, 5, 4, 6, 3, 0, 1],
      [3, 2, 6, 5, 1, 4, 0],
      [4, 0, 3, 1, 6, 2, 5],
      [5, 6, 0, 4, 2, 1, 3],
      [6, 4, 1, 0, 5, 3, 2]
    ]

const haas_carry_table* =
  when declared(haas_carry3_table):
    haas_carry3_table[0]
  else:
    [
      [0, 0, 0, 0, 0, 0, 0],
      [0, 6, 1, 0, 0, 0, 6],
      [0, 1, 1, 2, 0, 0, 0],
      [0, 0, 2, 2, 3, 0, 0],
      [0, 0, 0, 3, 3, 4, 0],
      [0, 0, 0, 0, 4, 4, 5],
      [0, 6, 0, 0, 0, 5, 5]
    ]

const haas_mul_table* = [
  [0, 0, 0, 0, 0, 0, 0],
  [0, 1, 2, 3, 4, 5, 6],
  [0, 2, 3, 4, 5, 6, 1],
  [0, 3, 4, 5, 6, 1, 2],
  [0, 4, 5, 6, 1, 2, 3],
  [0, 5, 6, 1, 2, 3, 4],
  [0, 6, 1, 2, 3, 4, 5]
]

const haas_neg_table* = haas_mul_table[4]

# Ascending basis vectors for powers of 7 on skewed axes
export basis

# [ 3  -2 ]^lambda [ nx ]
# [       ]        [    ] = haas_locii[lambda][digit]
# [ 2   1 ]        [ ny ]
#
# (nx, ny) = fn(digit)
#
# fn = 0 -> ( 0,  0 )
#      1 -> ( 1,  0 )
#      2 -> ( 1,  1 )
#      3 -> ( 0,  1 )
#      4 -> (-1,  0 )
#      5 -> (-1, -1 )
#      6 -> ( 0, -1 )
export locii


